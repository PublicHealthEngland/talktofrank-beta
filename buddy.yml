- pipeline: "Build"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "*"
  actions:
    - action: "Install dependencies"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "npm install"
    - action: "Validate"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "grunt validate"
      setup_commands:
      - "npm install -g grunt-cli"
    - action: "Build"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "grunt build"
      setup_commands:
      - "npm install -g grunt-cli"
- pipeline: "Build & Deploy (staging)"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "develop"
  actions:
    - action: "Install dependencies"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "npm install"
    - action: "Validate"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "grunt validate"
      setup_commands:
      - "npm install -g grunt-cli"
    - action: "Build"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "BUILD_CONFIG=staging grunt build"
      setup_commands:
      - "npm install -g grunt-cli"
    - action: "Deploy"
      type: "RSYNC"
      local_path: "./dist/"
      remote_path: "/home/deploy/app"
      login: "deploy"
      host: "18.130.26.25"
      port: "22"
      authentication_mode: "PRIVATE_KEY"
      server_key: "${id_rsa}"
      archive: true
      delete_extra_files: false
      compress: true
      deployment_excludes:
      - "/.git/"
    - action: "Restart App"
      type: "SSH_COMMAND"
      login: "deploy"
      host: "18.130.26.25"
      port: "22"
      authentication_mode: "PUBLIC_KEY"
      working_directory: "/home/deploy/app/"
      commands:
      - "pm2 startOrRestart ecosystem.json --env staging"
    - action: "Send notification to Public Health England - Talk To Frank"
      type: "SENTRY"
      environment: "$BUDDY_PIPELINE_NAME"
      organization_slug: "public-health-england-talk-to-"
      organization_name: "Public Health England - Talk To Frank"
      version: "$BUDDY_EXECUTION_REVISION"
      release_url: "$BUDDY_EXECUTION_URL"
      deploy_url: "$BUDDY_EXECUTION_URL"
      projects:
      - "talk-to-frank"
      trigger_condition: "ALWAYS"
      integration_id: 38897
    - action: "Run talktofrank-beta/Validate"
      type: "RUN_NEXT_PIPELINE"
      comment: "Triggered by $BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID"
      revision: "INHERIT"
      next_pipeline_id: 155377
- pipeline: "Build & Deploy (uat)"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "master"
  actions:
    - action: "Install dependencies"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "npm install"
    - action: "Validate"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "grunt validate"
      setup_commands:
      - "npm install -g grunt-cli"
    - action: "Build"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "BUILD_CONFIG=uat grunt build"
      setup_commands:
      - "npm install -g grunt-cli"
    - action: "Deploy"
      type: "RSYNC"
      local_path: "./dist/"
      remote_path: "/home/deploy/app"
      login: "deploy"
      host: "18.130.44.7"
      port: "22"
      authentication_mode: "PRIVATE_KEY"
      server_key: "${id_rsa}"
      archive: true
      delete_extra_files: false
      compress: true
      deployment_excludes:
      - "/.git/"
    - action: "Restart App"
      type: "SSH_COMMAND"
      login: "deploy"
      host: "18.130.44.7"
      port: "22"
      authentication_mode: "PUBLIC_KEY"
      working_directory: "/home/deploy/app/"
      commands:
      - "pm2 startOrRestart ecosystem.json --env uat"
    - action: "Send notification to Public Health England - Talk To Frank"
      type: "SENTRY"
      environment: "$BUDDY_PIPELINE_NAME"
      organization_slug: "public-health-england-talk-to-"
      organization_name: "Public Health England - Talk To Frank"
      version: "$BUDDY_EXECUTION_REVISION"
      release_url: "$BUDDY_EXECUTION_URL"
      deploy_url: "$BUDDY_EXECUTION_URL"
      projects:
      - "talk-to-frank"
      trigger_condition: "ALWAYS"
      integration_id: 38897
- pipeline: "Build & Deploy (preview)"
  trigger_mode: "ON_EVERY_PUSH"
  ref_name: "develop"
  actions:
    - action: "Install dependencies"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "npm install"
    - action: "Validate"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "grunt validate"
      setup_commands:
      - "npm install -g grunt-cli"
    - action: "Build"
      type: "BUILD"
      docker_image_name: "library/node"
      docker_image_tag: "9.8.0"
      execute_commands:
      - "BUILD_CONFIG=preview grunt build"
      setup_commands:
      - "npm install -g grunt-cli"
    - action: "Deploy"
      type: "RSYNC"
      local_path: "./dist/"
      remote_path: "/home/deploy/app"
      login: "deploy"
      host: "35.178.178.153"
      port: "22"
      authentication_mode: "PRIVATE_KEY"
      server_key: "${id_rsa}"
      archive: true
      delete_extra_files: false
      compress: true
      deployment_excludes:
      - "/.git/"
    - action: "Restart App"
      type: "SSH_COMMAND"
      login: "deploy"
      host: "35.178.178.153"
      port: "22"
      authentication_mode: "PUBLIC_KEY"
      working_directory: "/home/deploy/app/"
      commands:
      - "pm2 startOrRestart ecosystem.json --env preview"
- pipeline: "Master site deployment"
  trigger_mode: "MANUAL"
  ref_name: "master"
  ref_type: "BRANCH"
  trigger_condition: "ALWAYS"
  actions:
  - action: "Install dependencies"
    type: "BUILD"
    working_directory: "/buddy/talktofrank-beta"
    docker_image_name: "library/node"
    docker_image_tag: "10"
    execute_commands:
    - "npm install"
    setup_commands:
    - "npm install -g gulp grunt-cli"
    mount_filesystem_path: "/buddy/talktofrank-beta"
    shell: "SH"
    trigger_condition: "ALWAYS"
  - action: "Build"
    type: "BUILD"
    working_directory: "/buddy/talktofrank-beta"
    docker_image_name: "library/node"
    docker_image_tag: "10"
    execute_commands:
    - "BUILD_CONFIG=production grunt build"
    setup_commands:
    - "npm install -g gulp grunt-cli"
    mount_filesystem_path: "/buddy/talktofrank-beta"
    shell: "SH"
    trigger_condition: "ALWAYS"
  - action: "Archive directory"
    type: "ZIP"
    local_path: "/"
    destination: "ttf-app.zip"
    deployment_excludes:
    - "app\\* "
    - "contentful\\* "
    - ".git\\* "
    - "*.*  "
    - ".* "
    - "node_modules\\* "
    - "grunt\\*"
    - "features\\*"
    - "dist/config.creds.yaml"
    - "dist/config.ethereal.yaml"
    - "dist/config.google.yaml"
    - "dist/config.sentry.yaml"
    deployment_includes:
    - "config.creds.yaml"
    - "config.ethereal.yaml"
    - "config.google.yaml"
    - "config.sentry.yaml"
    - "package.json"
    trigger_condition: "ALWAYS"
- pipeline: "Validate"
  trigger_mode: "MANUAL"
  ref_name: "develop"
  actions:
    - action: "Dependencies and validate"
      type: "BUILD"
      docker_image_name: "koded/ttf-builder"
      docker_image_tag: "latest"
      execute_commands:
      - "npm install"
      - "npm install -g grunt-cli cucumber-js"
      - "CUCUMBER_HOST=https://beta-talktofrank.cxp.io npm test"
      trigger_condition: "ALWAYS"
